"use strict";(self.webpackChunkdocs_item_predicate_parser=self.webpackChunkdocs_item_predicate_parser||[]).push([[772],{6174:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var n=s(4848),r=s(8453);const a={sidebar_position:10},i="Text-Search Predicate",o={id:"expression-syntax/text-search-predicate",title:"Text-Search Predicate",description:"The text-search predicate scans through various text-based properties of an item, including it's displayname, lore-lines, book author, book title, book pages and skull owner name. It takes no arguments and is identified by surrounding double-quotes (\"); in order to add double-quotes to the predicate's contents, escape them by a backslash (\\).",source:"@site/docs/expression-syntax/text-search-predicate.md",sourceDirName:"expression-syntax",slug:"/expression-syntax/text-search-predicate",permalink:"/docs-item-predicate-parser/expression-syntax/text-search-predicate",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"documentationSidebar",previous:{title:"Music-Instrument Predicate",permalink:"/docs-item-predicate-parser/expression-syntax/music-instrument-predicate"},next:{title:"Exact Mode",permalink:"/docs-item-predicate-parser/expression-syntax/exact-mode"}},d={},c=[];function l(e){const t={a:"a",br:"br",code:"code",del:"del",h1:"h1",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"text-search-predicate",children:"Text-Search Predicate"})}),"\n",(0,n.jsxs)(t.p,{children:["The text-search predicate scans through various text-based properties of an item, including it's displayname, lore-lines, book author, book title, book pages and skull owner name. It takes no arguments and is identified by surrounding double-quotes (",(0,n.jsx)(t.code,{children:'"'}),"); in order to add double-quotes to the predicate's contents, escape them by a backslash (",(0,n.jsx)(t.code,{children:"\\"}),")."]}),"\n",(0,n.jsxs)(t.p,{children:["When matching text, queries and targets are split up into syllables based on spaces, and the algorithm as described for ",(0,n.jsx)(t.a,{href:"/docs-item-predicate-parser/expression-syntax/syllables",children:"syllables"})," applies again. If all query syllables found a match, the test is considered successful."]}),"\n",(0,n.jsx)(t.p,{children:"Examples:"}),"\n",(0,n.jsxs)(t.p,{children:["Target: a string containing ",(0,n.jsx)(t.strong,{children:"hello"})," and ",(0,n.jsx)(t.strong,{children:"world"}),(0,n.jsx)(t.br,{}),"\n",'Query: "hello world"',(0,n.jsx)(t.br,{}),"\n","Remaining Target: a string containing and",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.del,{children:"Remaining Query:"}),(0,n.jsx)(t.br,{}),"\n","Matched: \u2705"]}),"\n",(0,n.jsxs)(t.p,{children:["Target: a string ",(0,n.jsx)(t.strong,{children:"containing"})," a double-",(0,n.jsx)(t.strong,{children:"qoute"})," ",(0,n.jsx)(t.strong,{children:'"'}),(0,n.jsx)(t.br,{}),"\n",'Query: "containing \\" quote"',(0,n.jsx)(t.br,{}),"\n","Remaining Target: a string a double-",(0,n.jsx)(t.br,{}),"\n",(0,n.jsx)(t.del,{children:"Remaining Query:"}),(0,n.jsx)(t.br,{}),"\n","Matched: \u2705"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>o});var n=s(6540);const r={},a=n.createContext(r);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);