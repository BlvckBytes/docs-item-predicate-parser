"use strict";(self.webpackChunkdocs_item_predicate_parser=self.webpackChunkdocs_item_predicate_parser||[]).push([[383],{6906:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"documentationSidebar":[{"type":"link","label":"Introduction","href":"/docs-item-predicate-parser/","docId":"introduction","unlisted":false},{"type":"link","label":"Commands","href":"/docs-item-predicate-parser/commands","docId":"commands","unlisted":false},{"type":"link","label":"Installation","href":"/docs-item-predicate-parser/installation","docId":"installation","unlisted":false},{"type":"category","label":"Expression-Syntax","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Syllables","href":"/docs-item-predicate-parser/expression-syntax/syllables","docId":"expression-syntax/syllables","unlisted":false},{"type":"link","label":"Predicate Decision","href":"/docs-item-predicate-parser/expression-syntax/predicate-decision","docId":"expression-syntax/predicate-decision","unlisted":false},{"type":"link","label":"Numeric Arguments","href":"/docs-item-predicate-parser/expression-syntax/numeric-arguments","docId":"expression-syntax/numeric-arguments","unlisted":false},{"type":"link","label":"Material Predicate","href":"/docs-item-predicate-parser/expression-syntax/material-predicate","docId":"expression-syntax/material-predicate","unlisted":false},{"type":"link","label":"Amount Predicate","href":"/docs-item-predicate-parser/expression-syntax/amount-predicate","docId":"expression-syntax/amount-predicate","unlisted":false},{"type":"link","label":"Deterioration Predicate","href":"/docs-item-predicate-parser/expression-syntax/deterioration-predicate","docId":"expression-syntax/deterioration-predicate","unlisted":false},{"type":"link","label":"Enchantment Predicate","href":"/docs-item-predicate-parser/expression-syntax/enchantment-predicate","docId":"expression-syntax/enchantment-predicate","unlisted":false},{"type":"link","label":"Potion-Effect Predicate","href":"/docs-item-predicate-parser/expression-syntax/potion-effect-predicate","docId":"expression-syntax/potion-effect-predicate","unlisted":false},{"type":"link","label":"Music-Instrument Predicate","href":"/docs-item-predicate-parser/expression-syntax/music-instrument-predicate","docId":"expression-syntax/music-instrument-predicate","unlisted":false},{"type":"link","label":"Text-Search Predicate","href":"/docs-item-predicate-parser/expression-syntax/text-search-predicate","docId":"expression-syntax/text-search-predicate","unlisted":false},{"type":"link","label":"Exact Mode","href":"/docs-item-predicate-parser/expression-syntax/exact-mode","docId":"expression-syntax/exact-mode","unlisted":false},{"type":"link","label":"Or Junction","href":"/docs-item-predicate-parser/expression-syntax/or-junction","docId":"expression-syntax/or-junction","unlisted":false},{"type":"link","label":"And Junction","href":"/docs-item-predicate-parser/expression-syntax/and-junction","docId":"expression-syntax/and-junction","unlisted":false},{"type":"link","label":"Negation","href":"/docs-item-predicate-parser/expression-syntax/negation","docId":"expression-syntax/negation","unlisted":false},{"type":"link","label":"Parentheses","href":"/docs-item-predicate-parser/expression-syntax/parentheses","docId":"expression-syntax/parentheses","unlisted":false}],"href":"/docs-item-predicate-parser/category/expression-syntax"},{"type":"link","label":"Configuration","href":"/docs-item-predicate-parser/configuration","docId":"configuration","unlisted":false},{"type":"link","label":"API Usage","href":"/docs-item-predicate-parser/api-usage","docId":"api-usage","unlisted":false},{"type":"link","label":"External Support","href":"/docs-item-predicate-parser/external-support","docId":"external-support","unlisted":false},{"type":"link","label":"Issue Reporting","href":"/docs-item-predicate-parser/issue-reporting","docId":"issue-reporting","unlisted":false},{"type":"link","label":"Contribution","href":"/docs-item-predicate-parser/contribution","docId":"contribution","unlisted":false}]},"docs":{"api-usage":{"id":"api-usage","title":"API Usage","description":"The following step-by-step introduction will guide you through integrating this API into your own project; you\'ll be amazed by how little time it takes.","sidebar":"documentationSidebar"},"commands":{"id":"commands","title":"Commands","description":"This page outlines all existing commands, their permissions as well as their use-cases.","sidebar":"documentationSidebar"},"configuration":{"id":"configuration","title":"Configuration","description":"The configuration and all of its translation-inputs can be found in the folder called ItemPredicateParser/config; see the ConfigMapper\'s Documentation for more detail.","sidebar":"documentationSidebar"},"contribution":{"id":"contribution","title":"Contribution","description":"If you look to provide additional translations or improve on an existing language, please open a pull-request reflecting your changes. In the event of you seeking to provide feedback or wanting to share new and creative ideas in regards to future features, go about the same process as described in Issue Reporting.","sidebar":"documentationSidebar"},"expression-syntax/amount-predicate":{"id":"expression-syntax/amount-predicate","title":"Amount Predicate","description":"The amount predicate matches against the stack-size of an item and takes one argument: the target size. While, as with all predicates, this argument is optional, the predicate results in a noop (no operation) when left out, for obvious reasons.","sidebar":"documentationSidebar"},"expression-syntax/and-junction":{"id":"expression-syntax/and-junction","title":"And Junction","description":"The and junction results in a match if both it\'s left- and it\'s right-hand-side expressions evaluate to a match. It is evaluated before the or and after the negation, if not otherwise specified by the use of parentheses.","sidebar":"documentationSidebar"},"expression-syntax/deterioration-predicate":{"id":"expression-syntax/deterioration-predicate","title":"Deterioration Predicate","description":"The deterioration predicate matches against the remaining durability of an item and takes two arguments: the minimum used-up durability in percent, and the maximum used-up durability in percent. Without any arguments, this predicate results in all items which can experience deterioration, like tools, etc.","sidebar":"documentationSidebar"},"expression-syntax/enchantment-predicate":{"id":"expression-syntax/enchantment-predicate","title":"Enchantment Predicate","description":"The enchantment predicate matches against the enchantments contained either on an enchantable item, or an enchanted book and takes a single argument, representing the enchantment level. An item is considered to be a match as soon as it contains the desired enchantment, which does not rule out other concurrent enchantments; if this behavior is not desired, have a look at and then enter exact mode.","sidebar":"documentationSidebar"},"expression-syntax/exact-mode":{"id":"expression-syntax/exact-mode","title":"Exact Mode","description":"Exact mode is not a predicate by itself, but rather an operator which can be prepended to any other expression. Once entered, all enchantments and potion-effects need to be matched against by the contained predicates; each predicate removes it\'s match from the respective list, and at the end, the lists have to be empty for the whole exact expression to be considered a match.","sidebar":"documentationSidebar"},"expression-syntax/material-predicate":{"id":"expression-syntax/material-predicate","title":"Material Predicate","description":"The material-predicate matches against the type of item, e.g. stone, dirt, enchanted book, diamond pickaxe, etc., and does not take any arguments.","sidebar":"documentationSidebar"},"expression-syntax/music-instrument-predicate":{"id":"expression-syntax/music-instrument-predicate","title":"Music-Instrument Predicate","description":"The music-instrument predicate matches against all items which can be used as music instruments and takes no arguments. At the time of writing this, the aforementioned concept has just been introduced and only regards goat-horns.","sidebar":"documentationSidebar"},"expression-syntax/negation":{"id":"expression-syntax/negation","title":"Negation","description":"The negation operator flips the result of it\'s applied-to expression, and thereby converts matches into mismatches and vice-versa. It is always executed first, right after the exact mode operator, if not otherwise specified by the use of parentheses.","sidebar":"documentationSidebar"},"expression-syntax/numeric-arguments":{"id":"expression-syntax/numeric-arguments","title":"Numeric Arguments","description":"A predicate may support the use of one or more numeric arguments; these are the syntax-features available.","sidebar":"documentationSidebar"},"expression-syntax/or-junction":{"id":"expression-syntax/or-junction","title":"Or Junction","description":"The or junction results in a match if either it\'s left- or it\'s right-hand-side expression evaluates to a match - or both. It is always evaluated last, if not otherwise specified by the use of parentheses.","sidebar":"documentationSidebar"},"expression-syntax/parentheses":{"id":"expression-syntax/parentheses","title":"Parentheses","description":"Parentheses can be used to specify any arbitrary evaluation precedence other than the default by wrapping statements in a beginning opening-parenthesis ( and an ending closing-parenthesis ). While completing commands, parentheses do not need to be balanced, but when dispatching the corresponding command and thereby finally parsing the input, non-balanced parentheses will result in an error-notification, as to prevent unintentional behavior.","sidebar":"documentationSidebar"},"expression-syntax/potion-effect-predicate":{"id":"expression-syntax/potion-effect-predicate","title":"Potion-Effect Predicate","description":"The potion-effect predicate matches against both the base- as well as further custom-effects on various potions, such as standard-, splash- and lingering-potions; it takes two arguments, namely the effect\'s amplifier (level) as well as it\'s duration.","sidebar":"documentationSidebar"},"expression-syntax/predicate-decision":{"id":"expression-syntax/predicate-decision","title":"Predicate Decision","description":"While it might not be immediately obvious how specific predicate types are decided upon, based on nothing but the aforementioned syllable matching units, the process is rather simple. All existing target identifiers are tested against, which results in a list of matches; the match shortest in length is considered to be the final result. This list of matches is displayed to the user by the means of command completion, while the final result preview is rendered in the action-bar.","sidebar":"documentationSidebar"},"expression-syntax/syllables":{"id":"expression-syntax/syllables","title":"Syllables","description":"The main building-blocks of predicate-expressions are the syllables, which may massively shorten the resulting string by allowing to leave out parts of the target identifier, and thereby make the process of inputting desired filters less tedious. Another advantage would be that one only needs to remember parts of said identifiers, and can thereby explore a massive realm of available matches in a playful and stepwise manner.","sidebar":"documentationSidebar"},"expression-syntax/text-search-predicate":{"id":"expression-syntax/text-search-predicate","title":"Text-Search Predicate","description":"The text-search predicate scans through various text-based properties of an item, including it\'s displayname, lore-lines, book author, book title, book pages and skull owner name. It takes no arguments and is identified by surrounding double-quotes (\\"); in order to add double-quotes to the predicate\'s contents, escape them by a backslash (\\\\).","sidebar":"documentationSidebar"},"external-support":{"id":"external-support","title":"External Support","description":"The following plugins are supported to resolve language-keys by, meaning that the entries they add to the server\'s central Registry will also show up when building predicates; the display-names they provide are sanitized, meaning that all color-values - be it legacy, hex or even MiniMessage XML-format - are stripped off, in order to ensure a seamless experience.","sidebar":"documentationSidebar"},"installation":{"id":"installation","title":"Installation","description":"Simply download the latest jar-file from the corresponding repository\'s Release Page and move it into your server\'s plugin folder. There are no additional dependencies - everything should be plug-and-play.","sidebar":"documentationSidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"Since I tried to go into as much detail on the reasons, working-principles as well as the syntax itself, this documentation might seem a bit long-wided at first glance; feel free to skip over passages and focus on what\'s of interest to you specifically; but make sure to not miss out on any crucial syntax-details, as to allow for it\'s expressivity to fully unfold. There are multiple examples for each predicate, operator and logical junction on their respective pages.","sidebar":"documentationSidebar"},"issue-reporting":{"id":"issue-reporting","title":"Issue Reporting","description":"Please report any issues you encounter in the corresponding Issues-Section on the project\'s GitHub repository. Make sure to include a description sufficiently detailled enough to reproduce your case, and do not forget to attach relevant sections of your log-file, if applicable.","sidebar":"documentationSidebar"}}}}')}}]);