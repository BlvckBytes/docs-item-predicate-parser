"use strict";(self.webpackChunkdocs_item_predicate_parser=self.webpackChunkdocs_item_predicate_parser||[]).push([[712],{4313:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>h});var a=t(4848),i=t(8453);const s={sidebar_position:7},r="Enchantment Predicate",o={id:"expression-syntax/enchantment-predicate",title:"Enchantment Predicate",description:"The enchantment predicate matches against the enchantments contained either on an enchantable item, or an enchanted book and takes a single argument, representing the enchantment level. An item is considered to be a match as soon as it contains the desired enchantment, which does not rule out other concurrent enchantments; if this behavior is not desired, have a look at and then enter exact mode.",source:"@site/docs/expression-syntax/enchantment-predicate.md",sourceDirName:"expression-syntax",slug:"/expression-syntax/enchantment-predicate",permalink:"/docs-item-predicate-parser/expression-syntax/enchantment-predicate",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"documentationSidebar",previous:{title:"Deterioration Predicate",permalink:"/docs-item-predicate-parser/expression-syntax/deterioration-predicate"},next:{title:"Potion-Effect Predicate",permalink:"/docs-item-predicate-parser/expression-syntax/potion-effect-predicate"}},c={},h=[{value:"EcoEnchants Support",id:"ecoenchants-support",level:2},{value:"Examples",id:"examples",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"enchantment-predicate",children:"Enchantment Predicate"})}),"\n",(0,a.jsxs)(n.p,{children:["The enchantment predicate matches against the enchantments contained either on an enchantable item, or an enchanted book and takes a single argument, representing the enchantment level. An item is considered to be a match as soon as it contains the desired enchantment, which does not rule out other concurrent enchantments; if this behavior is not desired, have a look at and then enter ",(0,a.jsx)(n.a,{href:"/docs-item-predicate-parser/expression-syntax/exact-mode",children:"exact mode"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"ecoenchants-support",children:"EcoEnchants Support"}),"\n",(0,a.jsxs)(n.p,{children:["This plugin supports querying for enchantments stemming from ",(0,a.jsx)(n.a,{href:"https://github.com/Auxilor/EcoEnchants",children:"EcoEnchants"}),"; it does so simply by accessing the ",(0,a.jsx)(n.code,{children:"display-name"})," of each enchantment as configured and treating it like a usual translation, right after having stripped various formatting-notations off of it."]}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsxs)(n.p,{children:["Input: unbreaking",(0,a.jsx)(n.br,{}),"\n","Result: All items which contain unbreaking on any level"]}),"\n",(0,a.jsxs)(n.p,{children:["Input: unbreaking 2",(0,a.jsx)(n.br,{}),"\n","Result: All items which contain unbreaking on level 2"]}),"\n",(0,a.jsxs)(n.p,{children:["Input: unbreaking >2",(0,a.jsx)(n.br,{}),"\n","Result: All items which contain unbreaking on a level higher than 2"]}),"\n",(0,a.jsxs)(n.p,{children:["Input: unbreaking <5",(0,a.jsx)(n.br,{}),"\n","Result: All items which contain unbreaking on a level lower than 5"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var a=t(6540);const i={},s=a.createContext(i);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);